pipeline {
    agent none
    parameters {
        choice(name: 'CBL_EDITION', choices: ['enterprise', 'community'], description: 'Couchbase Lite Edition')
        string(name: 'CBL_VERSION', defaultValue: '3.2.0', description: 'Couchbase Lite Version')
        string(name: 'CBL_BUILD', defaultValue: '', description: 'Couchbase Lite Build Number')
    }
    options { timeout(time: 30, unit: 'MINUTES') }
    stages {
        stage('Init') {
            steps {
                script {
                    if (params.CBL_VERSION == '') { error "CBL_VERSION is required" }
                    if (params.CBL_BUILD == '') { error "CBL_BUILD is required" }
                    currentBuild.displayName = "${params.CBL_VERSION}-${params.CBL_BUILD}-${CBL_EDITION} (#${currentBuild.number})"
                }
            }
        }
        stage('Run Tests') {
            parallel {
                stage('OSX Tests') {
                    agent { label 'mob-e2e-mac-01' }
                    stages {
                        // Note that there is no fundamental reason that the Desktop and Web Services
                        // builds couldn't run in parallel.  We'd need to figure out how to set
                        // up the environment server and sg at alternate ports, probably, and we'd
                        // need hardware that can support the load.
                        stage('OSX Desktop Tests') {
                            steps {
                                sh """
                                    jenkins/pipelines/java/desktop/osx_tests.sh ${params.CBL_EDITION} ${params.CBL_VERSION} ${params.CBL_BUILD}
                                """
                            }
                            post {
                                always {
                                    echo "Teardown OSX Java Desktop Tests"
                                    sh '''
                                        jenkins/pipelines/java/desktop/osx_teardown.sh
                                    '''
                                }
                            }
                        }
                        stage('OSX Web Services Tests') {
                            steps {
                                sh """
                                    jenkins/pipelines/java/webservice/osx_tests.sh ${params.CBL_EDITION} ${params.CBL_VERSION} ${params.CBL_BUILD}
                                """
                            }
                            post {
                                always {
                                    echo "Teardown OSX Java Desktop Tests"
                                    sh '''
                                        jenkins/pipelines/java/webservice/osx_teardown.sh
                                    '''
                                }
                            }
                        }
                    }
                }
                stage('Windows Tests') {
                    agent { label 'mob-e2e-win-01' }
                    stages {
                        stage('Windows Desktop Tests') {
                            steps {
                                pwsh """
                                    jenkins/pipelines/java/desktop/win_tests.ps1 ${params.CBL_EDITION} ${params.CBL_VERSION} ${params.CBL_BUILD}
                                """
                            }
                            post {
                                always {
                                    echo "Teardown Windows Java Desktop Tests"
                                    pwsh '''
                                        jenkins/pipeline/java/desktop/win_teardown.ps1
                                    '''
                                }
                            }
                        }
                        stage('Windows Web Services Tests') {
                            steps {
                                powershell """
                                    jenkins/pipelines/java/webservice/win_tests.ps1 ${params.CBL_EDITION} ${params.CBL_VERSION} ${params.CBL_BUILD}
                                """
                            }
                            post {
                                always {
                                    echo "Teardown Windows Java Desktop Tests"
                                    powershell '''
                                        jenkins/pipelines/java/webservice/win_teardown.ps1
                                    '''
                                }
                            }
                        }
                    }
                }
                stage('Linux Tests') {
                    agent { label 'mob-e2e-deb-02' }
                    stages {
                        stage('Linux Desktop Tests') {
                            steps {
                                sh """
                                    jenkins/pipelines/java/desktop/linux_tests.sh ${params.CBL_EDITION} ${params.CBL_VERSION} ${params.CBL_BUILD}
                                """
                            }
                            post {
                                always {
                                    echo "Teardown Linux Java Desktop Tests"
                                    sh '''
                                        jenkins/pipelines/java/desktop/linux_teardown.sh
                                    '''
                                }
                            }
                        }
                        stage('Linux Web Services Tests') {
                            steps {
                                sh """
                                    jenkins/pipelines/java/webservice/linux_tests.sh ${params.CBL_EDITION} ${params.CBL_VERSION} ${params.CBL_BUILD}
                                """
                            }
                            post {
                                always {
                                    echo "Teardown Linux Java Desktop Tests"
                                    sh '''
                                        jenkins/pipelines/java/webservice/linux_teardown.sh
                                    '''
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
