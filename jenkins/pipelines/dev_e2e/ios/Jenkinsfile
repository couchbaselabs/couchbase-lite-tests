pipeline {
    agent none
    parameters {
        choice(name: 'CBL_EDITION', choices: ['enterprise', 'community'], description: 'Couchbase Lite Edition')
        string(name: 'CBL_VERSION', defaultValue: '4.0.0', description: 'Couchbase Lite Version')
        string(name: 'CBL_BUILD', defaultValue: '', description: 'Couchbase Lite Build Number')
        string(name: 'CBL_DATASET_VERSION', defaultValue: '4.0', description: "The dataset version to use (e.g. 3.2 or 4.0)")
        string(name: 'SGW_VERSION', defaultValue: '', description: "The version of Sync Gateway to download")
    }
    stages {
        stage('Init') {
            steps {
                script {
                    if (params.CBL_VERSION == '') { error "CBL_VERSION is required" }
                    if (params.CBL_BUILD == '') { error "CBL_BUILD is required" }
                    if (params.SGW_VERSION == '') { error "SGW_VERSION is required" }
                    currentBuild.displayName = "${params.CBL_VERSION}-${params.CBL_BUILD}-${CBL_EDITION} (#${currentBuild.number})"
                    currentBuild.description = "Dataset: ${params.CBL_DATASET_VERSION}"
                }
            }
        }
        stage('Run Test') {
            agent { label 'ios_m4' }
            steps {
                // Unlock keychain:
//                 sh 'security unlock-keychain -p ${KEYCHAIN_PASSWORD} ~/Library/Keychains/login.keychain-db'
                echo "Run iOS Test"
                timeout(time: 60, unit: 'MINUTES') {
                    sh """
                        export PATH="/opt/homebrew/opt/python@3.10/bin:/opt/homebrew/bin:/usr/local/bin:\$PATH"
                        terraform version
                        python3 --version
                        export AWS_PROFILE=mobile-for-now
                        echo "AWS_PROFILE is set to \$AWS_PROFILE"
                        which xcpretty && xcpretty --version
                        jenkins/pipelines/dev_e2e/ios/test.sh ${params.CBL_EDITION} ${params.CBL_VERSION} ${params.CBL_BUILD} ${params.CBL_DATASET_VERSION} ${params.SGW_VERSION} ~/.ssh/jborden.pem
                    """

                }
            }
//             post {
//                 always {
//                     echo "Teardown iOS Test"
//                     timeout(time: 5, unit: 'MINUTES') {
//                         sh 'jenkins/pipelines/dev_e2e/ios/teardown.sh'
//                     }
//                 }
//             }
        }
    }
    post {
        failure {
            mail bcc: '', body: "Project: <a href='${env.BUILD_URL}'>${env.JOB_NAME}</a> has failed!", cc: '', charset: 'UTF-8', from: 'jenkins@couchbase.com', mimeType: 'text/html', replyTo: 'no-reply@couchbase.com', subject: "${env.JOB_NAME} failed", to: "vipul.bhardwaj@couchbase.com";
        }
    }
}