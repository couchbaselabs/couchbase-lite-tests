pipeline {
    agent none

    parameters {
        choice(
            name: 'PLATFORM',
            choices: ['dotnet_windows', 'dotnet_macos', 'dotnet_ios', 'dotnet_android', 'jak_android', 'jak_desktop', 'jak_webservice', 'swift_ios', 'c_ios', 'c_android', 'c_linux_x86_64', 'c_macos', 'c_windows'],
            description: 'The test server platform to build'
        )
        string(
            name: 'VERSION',
            description: 'The version of CBL to use'
        )
        string(
            name: 'BLD_NUM',
            description: 'The build of CBL to use'
        )
        choice(
            name: 'DATASET_VERSION',
            choices: ['3.2', '4.0'],
            description: 'The dataset version to use (which version of CBL created the DB)'
        )
    }

    stages {
        stage('Validate Parameters') {
            agent any
            steps {
                script {
                    if (!params.PLATFORM || !params.VERSION || !params.BLD_NUM || !params.DATASET_VERSION) {
                        error("One or more required parameters are not set. Please set PLATFORM, VERSION, BLD_NUM, and DATASET_VERSION.")
                    }
                }
            }
        }

        stage('Build') {
            agent {
                label getNodeForPlatform(params.PLATFORM)
            }
            steps {
                script {
                    currentBuild.displayName = "${params.PLATFORM} ${params.VERSION}-${params.BLD_NUM}/${params.DATASET_VERSION}"
                    if (params.PLATFORM.contains("windows")) {
                        pwsh """
                            python -m venv venv
                            .\\venv\\Scripts\\activate
                            pip install -r environment/aws/requirements.txt
                            python environment/aws/topology_setup/build_test_server.py \$env:PLATFORM \$env:VERSION-\$env:BLD_NUM \$env:DATASET_VERSION --ci
                            deactivate
                        """
                    } else {
                        sh """#!/bin/bash -e
                            python3 -m venv venv
                            source venv/bin/activate
                            pip install -r "environment/aws/requirements.txt"
                            python "environment/aws/topology_setup/build_test_server.py" $PLATFORM $VERSION-$BLD_NUM $DATASET_VERSION --ci
                            deactivate
                        """
                    }
                }
            }
        }
    }
}

def getNodeForPlatform(platform) {
    if (platform.contains("windows")) {
        return 'mob-e2e-win-01'
    } else if (platform.contains("linux")) {
        return 'mob-e2e-deb-02'
    } else {
        return 'mob-e2e-mac-01'
    }
}